# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  # Invoked before lane execution
  before_all do
    update_fastlane
  end

  desc "Deploy a new version to GooglyPlay,  available tracks 'production, beta, alpha, internal'"
  lane :test_track do |options|
    track = options[:track]
    if !track
      UI.user_error!("Track not passed in parameters")
      next
    end
    version_name = last_git_tag
#    android_set_version_name(version_name: version_name ,gradle_file: "app/build.gradle")
#    android_set_version_code(gradle_file: "app/build.gradle")
    gradle(
      task: "clean bundle",
      build_type: "Release",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
#        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
#        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
       }
    )
    changelog = read_changelog(changelog_path: '../../flags_quiz/CHANGELOG.md')
      if changelog.empty?
        changelog = "Bug fixing and stability improvements"
      end
    puts(changelog)
    version_and_build = read_version_and_build
#   stamp_changelog(changelog_path: '../../flags_quiz/CHANGELOG.md',
#                   section_identifier: version_and_build)
#    add_changelog_to_metadata(changelog: changelog)
#    upload_to_play_store(track: track)
#    commit_files
#    push_to_remote
  end

  desc "Adds changelog to metadata to upload it to play console"
  lane :add_changelog_to_metadata do |options|
    changelog = options[:changelog]
    if !changelog
      UI.user_error!("Track not passed in parameters")
      next
    end
    version = get_version_code
    sh("echo \"#{changelog}\" > ./metadata/android/en-US/changelogs/#{version}.txt")
  end

  desc "Get version and build number"
  lane :read_version_and_build do
    version = android_get_version_name(gradle_file: "app/build.gradle")
    build = get_version_code
    "Version #{version} (#{build})"
  end

  desc "Get version code of project"
  lane :get_version_code do
    android_get_version_code(gradle_file: "app/build.gradle")
  end

  desc "Commit changes in repository"
  lane :commit_files do
    begin
      version_code = get_version_code
      git_add
      sh("git commit -m \"Changes for versionCode #{version_code}\"")
    rescue => ex
      UI.error(ex)
    end
  end

  desc "Push changes to remote repository"
  lane :push_to_remote do
    begin
      push_to_git_remote
    rescue => ex
      UI.error(ex)
    end
  end
end
