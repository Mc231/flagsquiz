import 'package:flags_quiz/models/continent.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:flutter/cupertino.dart';

/// An extension on the `Continent` enum to provide localized names.
///
/// The `ContinentAdditions` extension adds a method to the `Continent` enum
/// that allows retrieving localized strings for each continent. This facilitates
/// displaying continent names in the user's preferred language within a Flutter
/// application.
///
/// The localization strings are accessed using the `AppLocalizations` class,
/// which is generated by the Flutter localization package. The extension requires
/// a `BuildContext` to access the appropriate localization resources.
///
/// Example usage:
/// ```dart
/// Continent continent = Continent.eu;
/// String? localizedContinentName = continent.localizedName(context);
/// print(localizedContinentName); // Output: "Europe" (or equivalent in the user's language)
/// ```
extension ContinentAdditions on Continent {
  /// Retrieves the localized name for the continent.
  ///
  /// This method returns the localized string for the current `Continent` instance
  /// based on the application's localization settings. It uses the `BuildContext`
  /// to access the `AppLocalizations` instance, which provides the translated
  /// names for each continent.
  ///
  /// Returns a localized string corresponding to the continent if available;
  /// otherwise, returns `null`.
  ///
  /// [context] is the `BuildContext` used to access localization resources.
  ///
  /// Continent mapping:
  /// - `Continent.all` maps to the "All" localization.
  /// - `Continent.af` maps to the "Africa" localization.
  /// - `Continent.eu` maps to the "Europe" localization.
  /// - `Continent.as` maps to the "Asia" localization.
  /// - `Continent.na` maps to the "North America" localization.
  /// - `Continent.sa` maps to the "South America" localization.
  /// - `Continent.oc` maps to the "Oceania" localization.
  String? localizedName(BuildContext context) {
    final strings = AppLocalizations.of(context);
    switch (this) {
      case Continent.all:
        return strings?.all;
      case Continent.af:
        return strings?.africa;
      case Continent.eu:
        return strings?.europe;
      case Continent.as:
        return strings?.asia;
      case Continent.na:
        return strings?.northAmerica;
      case Continent.sa:
        return strings?.southAmerica;
      case Continent.oc:
        return strings?.oceania;
      default:
        return null;
    }
  }
}