import 'package:flutter_gen/gen_l10n/app_localizations.dart';

/// An extension on `AppLocalizations` to facilitate dynamic string resolution.
///
/// This extension provides additional functionality for the `AppLocalizations`
/// class by introducing a mechanism to dynamically resolve localized strings
/// using a key. It supports a mapping of keys to corresponding localization
/// properties, allowing easy access to localized content based on string keys.
///
/// The extension leverages a static `keyMap` to map string keys to localization
/// properties, making it possible to resolve localization strings dynamically
/// at runtime. This is particularly useful when localization keys are determined
/// programmatically or stored as string identifiers.
extension AppLocalizationsExtension on AppLocalizations {

  /// A map of string keys to functions that retrieve localization strings.
  ///
  /// The map associates string keys with functions that extract the corresponding
  /// localized string from an `AppLocalizations` instance. This allows the
  /// dynamic resolution of localization strings based on keys.
  ///
  /// Example key-value pairs include:
  /// - `'selectRegion'`: Resolves to the `selectRegion` localization string.
  /// - `'all'`: Resolves to the `all` localization string.
  static final Map<String, String Function(AppLocalizations)> keyMap = {
    'selectRegion': (AppLocalizations loc) => loc.selectRegion,
    'all': (AppLocalizations loc) => loc.all,
    'europe': (AppLocalizations loc) => loc.europe,
    'asia': (AppLocalizations loc) => loc.asia,
    'africa': (AppLocalizations loc) => loc.africa,
    'northAmerica': (AppLocalizations loc) => loc.northAmerica,
    'southAmerica': (AppLocalizations loc) => loc.southAmerica,
    'oceania': (AppLocalizations loc) => loc.oceania,
    'yourScore': (AppLocalizations loc) => loc.yourScore,
    'ad': (AppLocalizations loc) => loc.ad,
    'ae': (AppLocalizations loc) => loc.ae,
    'ag': (AppLocalizations loc) => loc.ag,
    'ai': (AppLocalizations loc) => loc.ai,
    'af': (AppLocalizations loc) => loc.af,
    'al': (AppLocalizations loc) => loc.al,
    'am': (AppLocalizations loc) => loc.am,
    'ao': (AppLocalizations loc) => loc.ao,
    'aq': (AppLocalizations loc) => loc.aq,
    'ar': (AppLocalizations loc) => loc.ar,
    'as': (AppLocalizations loc) => loc.as,
    'at': (AppLocalizations loc) => loc.at,
    'au': (AppLocalizations loc) => loc.au,
    'aw': (AppLocalizations loc) => loc.aw,
    'ax': (AppLocalizations loc) => loc.ax,
    'az': (AppLocalizations loc) => loc.az,
    'ba': (AppLocalizations loc) => loc.ba,
    'bb': (AppLocalizations loc) => loc.bb,
    'bd': (AppLocalizations loc) => loc.bd,
    'be': (AppLocalizations loc) => loc.be,
    'bf': (AppLocalizations loc) => loc.bf,
    'bg': (AppLocalizations loc) => loc.bg,
    'bh': (AppLocalizations loc) => loc.bh,
    'bi': (AppLocalizations loc) => loc.bi,
    'bj': (AppLocalizations loc) => loc.bj,
    'bl': (AppLocalizations loc) => loc.bl,
    'bm': (AppLocalizations loc) => loc.bm,
    'bn': (AppLocalizations loc) => loc.bn,
    'bo': (AppLocalizations loc) => loc.bo,
    'bq': (AppLocalizations loc) => loc.bq,
    'br': (AppLocalizations loc) => loc.br,
    'bs': (AppLocalizations loc) => loc.bs,
    'bt': (AppLocalizations loc) => loc.bt,
    'bv': (AppLocalizations loc) => loc.bv,
    'bw': (AppLocalizations loc) => loc.bw,
    'by': (AppLocalizations loc) => loc.by,
    'bz': (AppLocalizations loc) => loc.bz,
    'ca': (AppLocalizations loc) => loc.ca,
    'cc': (AppLocalizations loc) => loc.cc,
    'cd': (AppLocalizations loc) => loc.cd,
    'cf': (AppLocalizations loc) => loc.cf,
    'cg': (AppLocalizations loc) => loc.cg,
    'ch': (AppLocalizations loc) => loc.ch,
    'ci': (AppLocalizations loc) => loc.ci,
    'ck': (AppLocalizations loc) => loc.ck,
    'cl': (AppLocalizations loc) => loc.cl,
    'cm': (AppLocalizations loc) => loc.cm,
    'cn': (AppLocalizations loc) => loc.cn,
    'co': (AppLocalizations loc) => loc.co,
    'cr': (AppLocalizations loc) => loc.cr,
    'cu': (AppLocalizations loc) => loc.cu,
    'cv': (AppLocalizations loc) => loc.cv,
    'cw': (AppLocalizations loc) => loc.cw,
    'cx': (AppLocalizations loc) => loc.cx,
    'cy': (AppLocalizations loc) => loc.cy,
    'cz': (AppLocalizations loc) => loc.cz,
    'de': (AppLocalizations loc) => loc.de,
    'dk': (AppLocalizations loc) => loc.dk,
    'dm': (AppLocalizations loc) => loc.dm,
    'doZ': (AppLocalizations loc) => loc.doZ,
    'dj': (AppLocalizations loc) => loc.dj,
    'dz': (AppLocalizations loc) => loc.dz,
    'ec': (AppLocalizations loc) => loc.ec,
    'ee': (AppLocalizations loc) => loc.ee,
    'eg': (AppLocalizations loc) => loc.eg,
    'eh': (AppLocalizations loc) => loc.eh,
    'er': (AppLocalizations loc) => loc.er,
    'es': (AppLocalizations loc) => loc.es,
    'et': (AppLocalizations loc) => loc.et,
    'fi': (AppLocalizations loc) => loc.fi,
    'fj': (AppLocalizations loc) => loc.fj,
    'fk': (AppLocalizations loc) => loc.fk,
    'fm': (AppLocalizations loc) => loc.fm,
    'fo': (AppLocalizations loc) => loc.fo,
    'fr': (AppLocalizations loc) => loc.fr,
    'ga': (AppLocalizations loc) => loc.ga,
    'gb': (AppLocalizations loc) => loc.gb,
    'gd': (AppLocalizations loc) => loc.gd,
    'ge': (AppLocalizations loc) => loc.ge,
    'gf': (AppLocalizations loc) => loc.gf,
    'gg': (AppLocalizations loc) => loc.gg,
    'gh': (AppLocalizations loc) => loc.gh,
    'gi': (AppLocalizations loc) => loc.gi,
    'gl': (AppLocalizations loc) => loc.gl,
    'gm': (AppLocalizations loc) => loc.gm,
    'gn': (AppLocalizations loc) => loc.gn,
    'gp': (AppLocalizations loc) => loc.gp,
    'gq': (AppLocalizations loc) => loc.gq,
    'gr': (AppLocalizations loc) => loc.gr,
    'gs': (AppLocalizations loc) => loc.gs,
    'gt': (AppLocalizations loc) => loc.gt,
    'gu': (AppLocalizations loc) => loc.gu,
    'gw': (AppLocalizations loc) => loc.gw,
    'gy': (AppLocalizations loc) => loc.gy,
    'hk': (AppLocalizations loc) => loc.hk,
    'hm': (AppLocalizations loc) => loc.hm,
    'hn': (AppLocalizations loc) => loc.hn,
    'hr': (AppLocalizations loc) => loc.hr,
    'ht': (AppLocalizations loc) => loc.ht,
    'hu': (AppLocalizations loc) => loc.hu,
    'id': (AppLocalizations loc) => loc.id,
    'ie': (AppLocalizations loc) => loc.ie,
    'il': (AppLocalizations loc) => loc.il,
    'im': (AppLocalizations loc) => loc.im,
    'inZ': (AppLocalizations loc) => loc.inZ,
    'io': (AppLocalizations loc) => loc.io,
    'iq': (AppLocalizations loc) => loc.iq,
    'ir': (AppLocalizations loc) => loc.ir,
    'isZ': (AppLocalizations loc) => loc.isZ,
    'it': (AppLocalizations loc) => loc.it,
    'je': (AppLocalizations loc) => loc.je,
    'jm': (AppLocalizations loc) => loc.jm,
    'jo': (AppLocalizations loc) => loc.jo,
    'jp': (AppLocalizations loc) => loc.jp,
    'ke': (AppLocalizations loc) => loc.ke,
    'kg': (AppLocalizations loc) => loc.kg,
    'kh': (AppLocalizations loc) => loc.kh,
    'ki': (AppLocalizations loc) => loc.ki,
    'km': (AppLocalizations loc) => loc.km,
    'kn': (AppLocalizations loc) => loc.kn,
    'kp': (AppLocalizations loc) => loc.kp,
    'kr': (AppLocalizations loc) => loc.kr,
    'kw': (AppLocalizations loc) => loc.kw,
    'ky': (AppLocalizations loc) => loc.ky,
    'kz': (AppLocalizations loc) => loc.kz,
    'la': (AppLocalizations loc) => loc.la,
    'lb': (AppLocalizations loc) => loc.lb,
    'lc': (AppLocalizations loc) => loc.lc,
    'li': (AppLocalizations loc) => loc.li,
    'lk': (AppLocalizations loc) => loc.lk,
    'lr': (AppLocalizations loc) => loc.lr,
    'ls': (AppLocalizations loc) => loc.ls,
    'lt': (AppLocalizations loc) => loc.lt,
    'lu': (AppLocalizations loc) => loc.lu,
    'lv': (AppLocalizations loc) => loc.lv,
    'ly': (AppLocalizations loc) => loc.ly,
    'ma': (AppLocalizations loc) => loc.ma,
    'mc': (AppLocalizations loc) => loc.mc,
    'md': (AppLocalizations loc) => loc.md,
    'me': (AppLocalizations loc) => loc.me,
    'mf': (AppLocalizations loc) => loc.mf,
    'mg': (AppLocalizations loc) => loc.mg,
    'mh': (AppLocalizations loc) => loc.mh,
    'mk': (AppLocalizations loc) => loc.mk,
    'ml': (AppLocalizations loc) => loc.ml,
    'mm': (AppLocalizations loc) => loc.mm,
    'mn': (AppLocalizations loc) => loc.mn,
    'mo': (AppLocalizations loc) => loc.mo,
    'mp': (AppLocalizations loc) => loc.mp,
    'mq': (AppLocalizations loc) => loc.mq,
    'mr': (AppLocalizations loc) => loc.mr,
    'ms': (AppLocalizations loc) => loc.ms,
    'mt': (AppLocalizations loc) => loc.mt,
    'mu': (AppLocalizations loc) => loc.mu,
    'mv': (AppLocalizations loc) => loc.mv,
    'mw': (AppLocalizations loc) => loc.mw,
    'mx': (AppLocalizations loc) => loc.mx,
    'my': (AppLocalizations loc) => loc.my,
    'mz': (AppLocalizations loc) => loc.mz,
    'na': (AppLocalizations loc) => loc.na,
    'nc': (AppLocalizations loc) => loc.nc,
    'ne': (AppLocalizations loc) => loc.ne,
    'nf': (AppLocalizations loc) => loc.nf,
    'ng': (AppLocalizations loc) => loc.ng,
    'ni': (AppLocalizations loc) => loc.ni,
    'nl': (AppLocalizations loc) => loc.nl,
    'no': (AppLocalizations loc) => loc.no,
    'np': (AppLocalizations loc) => loc.np,
    'nr': (AppLocalizations loc) => loc.nr,
    'nu': (AppLocalizations loc) => loc.nu,
    'nz': (AppLocalizations loc) => loc.nz,
    'om': (AppLocalizations loc) => loc.om,
    'pa': (AppLocalizations loc) => loc.pa,
    'pe': (AppLocalizations loc) => loc.pe,
    'pf': (AppLocalizations loc) => loc.pf,
    'pg': (AppLocalizations loc) => loc.pg,
    'ph': (AppLocalizations loc) => loc.ph,
    'pk': (AppLocalizations loc) => loc.pk,
    'pl': (AppLocalizations loc) => loc.pl,
    'pm': (AppLocalizations loc) => loc.pm,
    'pn': (AppLocalizations loc) => loc.pn,
    'pr': (AppLocalizations loc) => loc.pr,
    'ps': (AppLocalizations loc) => loc.ps,
    'pt': (AppLocalizations loc) => loc.pt,
    'pw': (AppLocalizations loc) => loc.pw,
    'py': (AppLocalizations loc) => loc.py,
    'qa': (AppLocalizations loc) => loc.qa,
    're': (AppLocalizations loc) => loc.re,
    'ro': (AppLocalizations loc) => loc.ro,
    'rs': (AppLocalizations loc) => loc.rs,
    'ru': (AppLocalizations loc) => loc.ru,
    'rw': (AppLocalizations loc) => loc.rw,
    'sa': (AppLocalizations loc) => loc.sa,
    'sb': (AppLocalizations loc) => loc.sb,
    'sc': (AppLocalizations loc) => loc.sc,
    'sd': (AppLocalizations loc) => loc.sd,
    'se': (AppLocalizations loc) => loc.se,
    'sg': (AppLocalizations loc) => loc.sg,
    'sh': (AppLocalizations loc) => loc.sh,
    'si': (AppLocalizations loc) => loc.si,
    'sj': (AppLocalizations loc) => loc.sj,
    'sk': (AppLocalizations loc) => loc.sk,
    'sl': (AppLocalizations loc) => loc.sl,
    'sm': (AppLocalizations loc) => loc.sm,
    'sn': (AppLocalizations loc) => loc.sn,
    'so': (AppLocalizations loc) => loc.so,
    'sr': (AppLocalizations loc) => loc.sr,
    'ss': (AppLocalizations loc) => loc.ss,
    'st': (AppLocalizations loc) => loc.st,
    'sv': (AppLocalizations loc) => loc.sv,
    'sx': (AppLocalizations loc) => loc.sx,
    'sy': (AppLocalizations loc) => loc.sy,
    'sz': (AppLocalizations loc) => loc.sz,
    'tc': (AppLocalizations loc) => loc.tc,
    'td': (AppLocalizations loc) => loc.td,
    'tf': (AppLocalizations loc) => loc.tf,
    'tg': (AppLocalizations loc) => loc.tg,
    'th': (AppLocalizations loc) => loc.th,
    'tj': (AppLocalizations loc) => loc.tj,
    'tk': (AppLocalizations loc) => loc.tk,
    'tl': (AppLocalizations loc) => loc.tl,
    'tm': (AppLocalizations loc) => loc.tm,
    'tn': (AppLocalizations loc) => loc.tn,
    'to': (AppLocalizations loc) => loc.to,
    'tr': (AppLocalizations loc) => loc.tr,
    'tt': (AppLocalizations loc) => loc.tt,
    'tv': (AppLocalizations loc) => loc.tv,
    'tw': (AppLocalizations loc) => loc.tw,
    'tz': (AppLocalizations loc) => loc.tz,
    'ua': (AppLocalizations loc) => loc.ua,
    'ug': (AppLocalizations loc) => loc.ug,
    'um': (AppLocalizations loc) => loc.um,
    'us': (AppLocalizations loc) => loc.us,
    'uy': (AppLocalizations loc) => loc.uy,
    'uz': (AppLocalizations loc) => loc.uz,
    'va': (AppLocalizations loc) => loc.va,
    'vc': (AppLocalizations loc) => loc.vc,
    've': (AppLocalizations loc) => loc.ve,
    'vg': (AppLocalizations loc) => loc.vg,
    'vi': (AppLocalizations loc) => loc.vi,
    'vn': (AppLocalizations loc) => loc.vn,
    'vu': (AppLocalizations loc) => loc.vu,
    'wf': (AppLocalizations loc) => loc.wf,
    'ws': (AppLocalizations loc) => loc.ws,
    'xk': (AppLocalizations loc) => loc.xk,
    'ye': (AppLocalizations loc) => loc.ye,
    'yt': (AppLocalizations loc) => loc.yt,
    'za': (AppLocalizations loc) => loc.za,
    'zm': (AppLocalizations loc) => loc.zm,
    'zw': (AppLocalizations loc) => loc.zw
  };

  /// Resolves a localization string for the given [key].
  ///
  /// This method attempts to retrieve the localization string associated with
  /// the provided [key] from the `keyMap`. If the [key] is found, the
  /// corresponding localization string is returned. If the [key] is not found,
  /// it attempts to append 'Z' to the [key] and resolve again.
  ///
  /// This approach supports a fallback mechanism where keys with appended
  /// 'Z' are used for localization entries that may have different naming
  /// conventions.
  ///
  /// Returns the resolved localization string.
  ///
  /// Throws an error if the [key] or appended key cannot be resolved.
  String resolveKey(String key) {
    if (keyMap.containsKey(key)) {
      return keyMap[key]!(this);
    } else {
      String appendedKey = "${key}Z";
      return keyMap[appendedKey]!(this);
    }
  }
}

